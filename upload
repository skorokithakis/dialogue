#!/bin/bash
set -euo pipefail

file=keyboard

export PICO_PLATFORM=rp2040
export PICO_BOARD=pico

mkdir -p build
cd build || exit

rm -f src/${file}.*
cmake -DCMAKE_BUILD_TYPE=Release ..
cmake --build . --target ${file}

if [[ "$OSTYPE" == "darwin"* ]]; then
	cp src/${file}.uf2 /Volumes/RPI-RP2
else
    # --- Automatically detect the RP2040 mass-storage device -----------------
    #
    # 1.  Try a udev symlink that most modern distros create
    # 2.  Otherwise fall back to lsblk looking for the “RPI-RP2” model string
    # -------------------------------------------------------------------------
    DEVICE=""
    for dev in /dev/disk/by-id/usb-RPI_RP2*; do
        [[ -e "$dev" ]] && DEVICE=$(readlink -f "$dev") && break
    done

    # If the symlink method failed, scan lsblk’s MODEL column
    if [[ -z "$DEVICE" ]]; then
        DEVICE=$(lsblk -o NAME,MODEL -nr | awk '/RP2/ {print "/dev/"$1; exit}')
    fi

    # If we only have the base device (/dev/sdX) append the partition “1”
    if [[ -n "$DEVICE" && "$DEVICE" =~ ^/dev/sd[a-z]$ ]]; then
        DEVICE="${DEVICE}1"
    fi

    # Bail out early when we still have nothing
    if [[ -z "$DEVICE" ]]; then
        echo "ERROR: Could not locate a Raspberry-Pi RP2040 in BOOTSEL mode." >&2
        exit 1
    fi

    # Determine current mount-point (if already mounted)
    MOUNT_POINT=$(lsblk -no MOUNTPOINT "$DEVICE")

    # Mount it if necessary (retry up to 5×, copied from original logic)
    if [[ -z "$MOUNT_POINT" ]]; then
        ATTEMPTS=0
        MAX_ATTEMPTS=5
        while [[ -z "$MOUNT_POINT" && $ATTEMPTS -lt $MAX_ATTEMPTS ]]; do
            echo "Attempting to mount $DEVICE ($((ATTEMPTS+1))/$MAX_ATTEMPTS)…"
            udisksctl mount -b "$DEVICE" >/dev/null 2>&1 || true
            sleep 1
            MOUNT_POINT=$(lsblk -no MOUNTPOINT "$DEVICE")
            ((++ATTEMPTS))
        done
    fi

    # Only attempt to copy if the mount point now exists
    if [[ -d "$MOUNT_POINT" ]]; then
        cp src/${file}.uf2 "$MOUNT_POINT"
        echo "Copied file."
    else
        echo "ERROR: $MOUNT_POINT not available; UF2 file not copied." >&2
        exit 1
    fi
fi

cd ..
